plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

apply plugin: 'kotlin-kapt'

android {
    namespace 'com.example.mvvmcleanarch'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.mvvmcleanarch"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String","API_KEY","\"b0211b8ec5813b88d8fee69586b64e22\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding{
        enable true
    }
}

dependencies {
    def lifecycle_version = "2.6.0-alpha03"
    def retrofit_version = "2.9.0"
    def coroutine_version = "1.6.4"
    def room_version = "2.4.3"
    def dagger_version = "2.44.2"
    def glide_version = "4.14.2"

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
    // LiveData
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")
    // Annotation processor
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    //GSON
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    //OKHTTP interceptor
    implementation("com.squareup.okhttp3:logging-interceptor:4.10.0")

    //Room
    implementation("androidx.room:room-runtime:$room_version")
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room_version")

    //Kotlin Coroutine
    //core
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    //android
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    //Dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt("com.google.dagger:dagger-compiler:$dagger_version")

    //Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
}